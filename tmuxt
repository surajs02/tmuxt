#!/bin/bash

# Error if settings haven't been loaded
if [[ ! -v TMUXT_SETTINGS_LOADED ]]; then
	echo 'tmuxt settings failed to load'
    exit 0
fi

if ! test -d $TMUXT_TEMPLATES_PATH; then
	echo "Cannot find templates folder at [$TMUXT_TEMPLATES_PATH]"
	exit 1
fi

shortHelp="usage: $(basename $0) [-hHl | -a scriptPath | -dex scriptName]"
longHelp=$(cat <<EOF
NAME: 
	tmuxt -- tmux template script manager

SYNOPSIS:
	$shortHelp

DESCRIPTION:
	tmuxt is a simple script manager for tmux: it provides options for managing scripts

OPTIONS:
	-h 
		Show short help
	-H
		Show long help
	-l
		List template scripts
	-a scriptPath
		Adds the script to templates
	-p scriptName
		Gets the script's path from templates
	-r scriptName
		Removes the script from templates
	-e scriptName
		Edits the script in templates
	-x scriptName
		Executes the script in templates
EOF
)

function getScriptPaths() {
	echo `find "$TMUXT_TEMPLATES_PATH" -name "*.sh"`
}

function getScriptNames() {
	for p in `getScriptPaths`; do
		if [ -f "$p" ]; then
			scriptName=`basename $p`
			echo "$scriptName"
		fi
	done
}

function exitIfNoFile() {
	if ! test -f $1; then
		echo "Cannot find file at [$1]"
		exit 1
	fi
}

while getopts "lhHa:p:r:e:x:d:" opt; do
	case $opt in
		h)
			echo "$shortHelp"
			exit 0
			;;
		H)
			echo "$longHelp"
			exit 0
			;;
		l)
			scriptNames=`ls $TMUXT_TEMPLATES_PATH`
			if [[ `echo $scriptNames|wc -w` < 1 ]]; then
				echo 'No templates found'
			else
				echo $scriptNames
			fi
			exit 0
			;;
		a)
			newScriptPath="$OPTARG"
			exitIfNoFile $scriptPath

			cp -vi $newScriptPath $TMUXT_TEMPLATES_PATH/
			exit 0
			;;
		p)
			scriptName="$OPTARG"
			scriptPath=$TMUXT_TEMPLATES_PATH/$scriptName
			exitIfNoFile $scriptPath

			echo $scriptPath
			exit 0
			;;
		r)
			scriptName="$OPTARG"
			scriptPath=$TMUXT_TEMPLATES_PATH/$scriptName
			exitIfNoFile $scriptPath

			rm -vi $scriptPath
			exit 0
			;;
		e)
			scriptName="$OPTARG"
			scriptPath=$TMUXT_TEMPLATES_PATH/$scriptName
			exitIfNoFile $scriptPath

			if [ -v $EDITOR ]; then # No default editor
				echo 'No editor found at [$EDITOR]'
			else
				$EDITOR $scriptPath
			fi

			exit 0
			;;
		x)
			scriptName="$OPTARG"
			echo $scriptName
			scriptPath=$TMUXT_TEMPLATES_PATH/$scriptName
			exitIfNoFile $scriptPath

			$scriptPath
			exit 0
			;;
		d)
			echo 'd'
			scriptName="$OPTARG"
			scriptPath=$TMUXT_TEMPLATES_PATH/$scriptName
			exitIfNoFile $scriptPath

			# Update default template in settings
			defaultTemplateVarName='TMUXT_DEFAULT_TEMPLATE'
			if [[ `cat $TMUXT_SETTINGS_PATH|grep -i $defaultTemplateVarName|wc -w` > 0 ]]; then
				echo 'settings has default'
			else
				echo 'settings not have default'
			fi

			# cat tmuxt.ini|sed "s/TMUXT_DEFAULT_TEMPLATE=.*$/TMUXT_DEFAULT_TEMPLATE='$scriptName'/"
			exit 0
			;;
		?)
			echo $shortHelp >&2
			exit 1
			;;
	esac
done

# Remove options so can access params
shift "$(($OPTIND -1))"

if [ "$#" -lt 1 ]; then
	echo "No default template set"
	exit 1
else
	# TODO execute default
	echo "Executing default template at [$TMUXT_DEFAULT_TEMPLATE]"
fi
